{"version":3,"sources":["componentes/Formulary.js","componentes/Final.js","componentes/helpers/Promise.js","componentes/Montado.js","componentes/hooks/useFetch.js","componentes/Listas.js","index.js"],"names":["Formulary","setlists","useState","values","setvalues","onSubmit","e","preventDefault","trim","length","newValor","type","value","placeholder","onChange","target","Final","title","url","className","src","alt","Promise","category","a","encodeURI","fetch","respuesta","json","data","recive","map","img","id","images","downsized_medium","Montado","lites","loading","state","setstate","useEffect","then","imgs","setTimeout","clearTimeout","useFetch","Listas","lists","dom","document","querySelector","ReactDOM","render"],"mappings":"6LAEaA,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAETC,mBAAS,IAFA,mBAE9BC,EAF8B,KAEtBC,EAFsB,KAiBrC,OACI,sBAAMC,SAVE,SAACC,GACjBA,EAAEC,iBAEIJ,EAAOK,OAAOC,OAAO,IACnBR,GAAS,SAAAS,GAAQ,OAAGP,GAAH,mBAAaO,OAC9BN,EAAU,MAKV,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,YAAY,sBACZC,SAnBW,SAACR,GAClBF,EAAUE,EAAES,OAAOH,a,QCLZI,EAAQ,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IACzB,OACI,sBAAKC,UAAU,UAAf,UACQ,qBAAMA,UAAU,SAASC,IAAKF,EAAKG,IAAKJ,IAC5C,kCAAKA,EAAL,W,uBCLCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACiCO,UAAUF,GAD3C,+DAEGG,MAAMR,GAFT,cAEbS,EAFa,gBAGAA,EAAUC,OAHV,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YACrB,CACIC,GAAGD,EAAIC,GACPhB,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIE,cAAL,aAAC,EAAYC,iBAAiBjB,QARtB,kBAYZY,GAZY,4CAAH,sDCIPM,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,ECDZ,SAACA,GAAW,IAAD,EACRnC,mBAAS,CAC/B2B,KAAK,GACLS,SAAQ,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAmBnC,OAbAC,qBACI,WACInB,EAAQe,GAAOK,MAAK,SAAAC,GAChB,IAAMnB,EAAEoB,YAAW,kBAAKJ,EAAS,CACpBX,KAAKc,EACLL,SAAQ,MACP,KACd,OAAO,kBAAIO,aAAarB,SAK9B,CAACa,IACAE,EDhBoBO,CAAST,GAAxBE,EAFwB,EAE7BV,KAAWS,EAFkB,EAElBA,QAEd,OACI,qCACA,oBAAGnB,UAAU,UAAb,cAAyBmB,GAAW,aAApC,OACE,6BAAKD,IACL,qBAAKlB,UAAU,SAAf,SAGEoB,EAAMR,KAAI,SAAAY,GAAI,OACV,cAAC,EAAD,eAAyBA,GAAbA,EAAKV,aEZpBc,EAAS,WAAO,IAAD,EAEE7C,mBAAS,CAAC,QAFZ,mBAEjB8C,EAFiB,KAEV/C,EAFU,KAKxB,OAEQ,qCAEJ,cAAC,EAAD,CAAWA,SAAUA,IAEnB+C,EAAMjB,KAAI,SAAAM,GAAK,OACT,cAAC,EAAD,CAAqBA,MAAOA,GAAdA,UCZxBY,G,MAAIC,SAASC,cAAc,UACjCC,IAASC,OACT,cAAC,EAAD,IAAWJ,K","file":"static/js/main.c875542d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const Formulary = ({setlists}) => {\r\n\r\n    const [values, setvalues] = useState('');\r\n\r\n    const valuesChange=(e)=>{\r\n      setvalues(e.target.value);\r\n    }\r\n\r\n    const enter=(e)=>{\r\ne.preventDefault();\r\n\r\n   if(values.trim().length>2){\r\n        setlists(newValor=>[values,...newValor]);\r\n        setvalues('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={enter}>\r\n            <input \r\n            type='text'\r\n            value={values}\r\n            placeholder='tu busqueda poyuelo'\r\n            onChange={valuesChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Final = ({title,url}) => {\r\n    return (\r\n        <div className='finalys'>\r\n                <img  className='finaly' src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const Promise = async(category) => {\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=xQqJl6LqZwI23rHQzwHWEh7KuVhKFLDL`;\r\n    const respuesta=await fetch(url);\r\n    const {data}=await respuesta.json();\r\n    const recive=data.map(img=>(\r\n        {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    ))\r\n    // const\r\n    return recive\r\n}\r\n","import React from 'react'\r\nimport { Final } from './Final'\r\nimport { useFetch } from './hooks/useFetch'\r\n\r\n\r\nexport const Montado = ({lites}) => {\r\n\r\nconst {data:state,loading}=useFetch(lites);\r\n\r\n    return (\r\n        <>\r\n        <p className='loading'> {loading && 'loading...'} </p>\r\n          <h3>{lites}</h3>\r\n          <div className='listas'>\r\n      \r\n        {\r\n            state.map(imgs=>(\r\n                <Final key={imgs.id} {...imgs}/>\r\n            ))\r\n        }\r\n          </div>\r\n    \r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { Promise } from \"../helpers/Promise\";\r\n\r\n\r\nexport const useFetch = (lites) => {\r\n const [state, setstate] = useState({\r\n     data:[],\r\n     loading:true\r\n });\r\n\r\nuseEffect(\r\n    ()=>{\r\n        Promise(lites).then(imgs=>{\r\n            const a=setTimeout(()=> setstate({\r\n                         data:imgs,\r\n                         loading:false\r\n                       }),3000);\r\n            return ()=>clearTimeout(a);\r\n        } \r\n           \r\n        )\r\n\r\n    },[lites]);\r\nreturn state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Formulary } from './Formulary';\r\n// import { Promise } from './helpers/Promise';\r\nimport { Montado } from './Montado';\r\n\r\nexport const Listas = () => {\r\n\r\n    const [lists, setlists] = useState(['dog']);\r\n\r\n// Promise();\r\n    return (\r\n        \r\n            <>\r\n\r\n        <Formulary setlists={setlists} /> \r\n   \r\n         {lists.map(lites=>(\r\n                <Montado key={lites} lites={lites}/>\r\n            ))}\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Listas } from './componentes/Listas';\nimport './index.css';\n\nconst dom=document.querySelector('#root')\nReactDOM.render(\n<Listas />,dom\n);\n\n\n"],"sourceRoot":""}